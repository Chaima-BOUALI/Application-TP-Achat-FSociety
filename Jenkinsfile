pipeline {
    agent any
   
    environment {
        // This can work with nexus3 or nexus2
       
        // This can be http or https
        NEXUS_PROTOCOL = "http"
        // Where your Nexus is running
        NEXUS_URL = "localhost:8081/Nexus"
        // Nexus repository where we will upload the artifact
        NEXUS_REPOSITORY = "Releases"
        // Jenkins credential id to authenticate to Nexus
        NEXUS_CREDENTIAL_ID = "admin:admin123"
    }
    stages {

        stage("clone repo") {
            steps {
                script {
                sh 'git clone https://github.com/ChaymaBoualy/Application-TP-Achat-FSociety.git'
                sh 'cd Application-TP-Achat-FSociety/ && git checkout ChaymaAaouadi'
                sh 'cp -rf Application-TP-Achat-FSociety/* /var/lib/jenkins/workspace/devops7/'
                }
            }
        }

        stage("mvn install") {
            steps {
                script {
                   sh ' mvn install'
                }
            }
        }

        stage("Sonarqube") {
            steps {
                
                  sh ' mvn sonar:sonar'
                
            }
        }
        stage("mvn test") {
            steps {
              
                    //this step attempts to clean the files and directories generated by Maven during its build
                  sh ' mvn test '
            
            }
        }
        stage("mvn package") {
            steps {
             
                   sh 'mvn package'
            
            }
        }
        stage("mvn NEXUS") {
            steps {
               
                   sh 'mvn deploy'
                
            }
        }

  	    stage("docker build Image") {
            steps {
               
                    sh ' docker build -t chaymaesprit/devops_project1:"$BUILD_NUMBER" .'
                
                }
            } 
           
        stage("docker login") {
            steps {
               
                    // this stage deploys the artifact into Nexus repository
                    sh 'docker login -u chaymaesprit -p dckr_pat_za_ssUUz3BgDXrLVQoiDZUdjISA'
                
            }
        }
        stage("docker deploy ") {
            steps {
               
                    sh 'docker push chaymaesprit/devops_project1:"$BUILD_NUMBER" ' 
                    
            
            }
        }
        stage("docker-Compose") {
            steps {
               
                    sh 'docker-compose up -d' 
                    
            
            }
        }
        stage("CleanUp") {
            steps {
               
                    sh 'docker rmi chaymaesprit/devops_project1:"$BUILD_NUMBER"' 
                    sh 'rm -rf *'
                    
            
            }
        }
             
              



    }
}
    


